// Generated by CoffeeScript 1.7.1
(function() {
  Bootstrap.BsButtonComponent = Ember.Component.extend(Bootstrap.TypeSupport, Bootstrap.SizeSupport, {
    layoutName: 'components/bs-button',
    tagName: 'button',
    classNames: ['btn'],
    classNameBindings: ['blockClass'],
    classTypePrefix: 'btn',
    clickedParam: null,
    block: null,
    attributeBindings: ['disabled', 'dismiss:data-dismiss', '_type:type'],
    _type: 'button',
    bubbles: true,
    init: function() {
      var attr, key, val, _ref, _results, _results1;
      this._super();
      if ((this.get('content') != null) && Ember.typeOf(this.get('content')) === 'instance') {
        _ref = this.get('content');
        _results = [];
        for (key in _ref) {
          val = _ref[key];
          _results.push(this.set(key, val));
        }
        return _results;
      } else {
        if (this.get('title') == null) {
          this.set('title', this.get('content'));
        }
        _results1 = [];
        for (attr in this) {
          if (attr.match(/^data-[\w-]*$/) != null) {
            _results1.push(this.attributeBindings.pushObject(attr));
          }
        }
        return _results1;
      }
    },
    blockClass: (function() {
      if (this.block) {
        return "" + this.classTypePrefix + "-block";
      } else {
        return null;
      }
    }).property('block').cacheable(),
    click: function(evt) {
      if (!this.get('bubbles')) {
        evt.stopPropagation();
      }
      return this.sendAction('clicked', this.get('clickedParam'));
    },
    loadingChanged: (function() {
      var loading;
      loading = this.get('loading') !== null ? this.get('loading') : "reset";
      return Ember.$("#" + this.elementId).button(loading);
    }).observes('loading')
  });

  Ember.Handlebars.helper('bs-button', Bootstrap.BsButtonComponent);

}).call(this);
